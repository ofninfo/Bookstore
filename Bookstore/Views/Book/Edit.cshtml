@model Bookstore.Models.BookModel

@{
    ViewData["Title"] = "Editar Livro";
}

<h1>Editar Livro</h1>

<h4>Editando cadastro de livro para disponibilizar na loja</h4>
<hr />
<div class="row">
    <div class="col-12">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="BookId" />
            <div class="row">
                <div class="col-6">
                    <div class="form-group">
                        <label asp-for="Title" class="control-label"></label>
                        <input asp-for="Title" class="form-control" />
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-6">
                    <div class="form-group">
                        <label asp-for="Author" class="control-label"></label>
                        <input asp-for="Author" class="form-control" />
                        <span asp-validation-for="Author" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-6">
                    <div class="form-group">
                        <label asp-for="PublishingCompany" class="control-label"></label>
                        <input asp-for="PublishingCompany" class="form-control" />
                        <span asp-validation-for="PublishingCompany" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-6">
                    <div class="form-group">
                        <label asp-for="ISBN" class="control-label"></label>
                        <input asp-for="ISBN" class="form-control" />
                        <span asp-validation-for="ISBN" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-6">
                    <div class="form-group">
                        <label asp-for="Quantity" class="control-label"></label>
                        <input asp-for="Quantity" class="form-control" />
                        <span asp-validation-for="Quantity" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-6">
                    <div class="form-group">
                        <label asp-for="BarCode" class="control-label"></label>
                        <input asp-for="BarCode" class="form-control" />
                        <span asp-validation-for="BarCode" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-6">
                    <div class="form-group">
                        <label asp-for="Value" class="control-label"></label>
                        <input asp-for="Value" class="form-control" />
                        <span asp-validation-for="Value" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-6">
                </div>
            </div>
            <div class="form-group my-3">
                <button type="submit" class="btn btn-primary"><i class="bi bi-save"></i> Salvar</button>
                <a asp-action="Index" class="btn btn-outline-secondary"><i class="bi bi-reply"></i> Voltar</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script type="text/javascript">
        $(document).ready(function () {

            $.validator.methods.range = function (value, element, param) {
                var globalizedValue = value.replace(",", ".");
                return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
            }

            $.validator.methods.number = function (value, element) {
                return this.optional(element) || /-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
            }
            //Date dd/MM/yyyy
            $.validator.methods.date = function (value, element) {
                var date = value.split("/");
                return this.optional(element) || !/Invalid|NaN/.test(new Date(date[2], date[1], date[0]).toString());
            }

        });
    </script>
}
